<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHBwAAAAAGADICQAAFgAAACgAAAAcAAAAOAAAAAEAGAAAAAAAoAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYxK8YxK/C7+rC7+oAAAAAAAAAAAAAAAAYxK8YxK/C7+rC
        7+oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYxK8YxK/C7+rC
        7+oAAAAAAAAAAAAAAAAYxK8YxK/C7+rC7+oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAYxK8YxK8AAAAAAAAAAAAAAAAAAAAAAAAYxK8YxK8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYxK8YxK8AAAAAAAAAAAAAAAAAAAAA
        AAAYxK8YxK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZ2dnZ2dnm5ubm5uYAAAAAAADm5ubm
        5ubm5ubm5ubm5ubm5uYAAAAAAADm5ubm5ubm5ubm5ubm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADZ2dnZ2dnm5ubm5uYAAAAAAADm5ubm5ubm5ubm5ubm5ubm5uYAAAAAAADm5ubm5ubm5ubm5ubm5ubm
        5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubm5ubm5ubw8PDw8PDw8PDw8PDw8PDw
        8PDm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm
        5ubm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5uYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDZ2dnZ2dnZ2dnZ
        2dnZ2dnZ2dnZ2dnZ2dnm5ubm5ubm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw
        8PDw8PDw8PDw8PDw8PDZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnm5ubm5ubm5ubm5uYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDm5ubm5ubZ2dnZ2dnZ2dnZ
        2dnZ2dnZ2dnm5ubm5ubm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw
        8PDw8PDw8PDm5ubm5ubZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnm5ubm5ubm5ubm5uYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDm5ubm5ubZ2dnZ2dnZ2dnZ2dnw8PDw
        8PDm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw
        8PDm5ubm5ubZ2dnZ2dnZ2dnZ2dnw8PDw8PDm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDm5ubm5ubZ2dnZ2dnw8PDw8PDm5ubm5uYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDm5ubm
        5ubZ2dnZ2dnw8PDw8PDm5ubm5uYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PAC2r8C2r8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw
        8PDw8PDw8PAC2r8C2r8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm
        5ubw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PAC2r8C2r8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PAC2r8C2r8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw
        8PAAAAAAAADw8PDw8PAC2r8C2r8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PAAAAAAAADw8PDw8PAC2r8C2r8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm5ubm5ubw8PDw8PDm5ubm
        5uYAAAAAAAAC2r8C2r8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADm5ubm5ubw8PDw8PDm5ubm5uYAAAAAAAAC2r8C2r8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEv0WEv0WEv0WEv0WEv0WEv0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEv0W
        Ev0WEv0WEv0WEv0WEv0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWEv0WEv0AAAAAAAAAAAAAAAAWEv0WEv0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEv0WEv0AAAAAAAAAAAAAAAAWEv0W
        Ev0AAAAAAAAAAAAAAAD/Dw/w/w8P8P8/P/D/Pz/wDAwP8AwMD/DAAAPwwAAD8PAAAPDwAADw/AAAMPwA
        ADD/AAAw/wAAMP/AADD/wAAw//AAAP/wAAD//AAw//wAMP//ADD//wAw///AwP//wMD//8Dw///A8P//
        PPD//zzw
</value>
  </data>
</root>